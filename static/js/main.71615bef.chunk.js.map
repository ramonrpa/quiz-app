{"version":3,"sources":["core/constants/amountOfQuestions.js","core/constants/categories.js","core/constants/difficulty.js","core/constants/questionsType.js","components/Icon/index.js","components/Select/index.js","components/Main/index.js","components/LoadingModal/index.js","core/utils.js","components/Result/Stats.js","components/Result/Questions.js","components/Result/index.js","components/Quiz/index.js","core/api.js","components/ErrorModal/index.js","components/App.js","serviceWorker.js","index.js"],"names":["CATEGORIES","key","text","value","AMOUNT_OF_QUESTIONS","i","object","push","DIFFICULTY","QUESTIONS_TYPE","Icon","render","style","color","props","className","icon","Component","Select","Form","Group","Label","label","Control","onChange","as","id","itens","map","item","App","Row","Col","event","setState","category","target","amountOfQuestions","difficulty","questionsType","Button","onClick","onStart","state","variant","LoadingModal","Modal","aria-labelledby","centered","show","Body","Spinner","animation","role","aria-hidden","twoHouses","numero","secondsToTime","time","hours","Math","trunc","minutes","seconds","totalQuestions","correctAnswers","totalTime","score","Number","toFixed","timeText","Container","Badge","questionsResult","Table","bordered","hover","responsive","index","question","user_answer","correct_answer","correct","retakeQuiz","backToHome","activeTab","ButtonGroup","Stats","Questions","componentDidMount","options","questions","incorrect_answers","splice","floor","random","currentQuestionIndex","isLoading","timer","setInterval","handleNext","selectedOption","he","decode","length","clearInterval","quizIsCompleted","resultComponent","getResult","setTimeout","Result","letter","selected","size","disabled","getTrivia","type","Promise","resolve","reject","a","url","format","fetch","response","ok","json","data","String","prototype","args","arguments","this","replace","match","number","ErrorModal","close","handleStart","result","response_code","results","isQuizStarted","isError","errorMessage","handleClose","Card","Header","Title","Main","Quiz","Footer","href","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.71615bef.chunk.js","sourcesContent":["const AMOUNT_OF_QUESTIONS = []\r\n\r\nfor (let i = 5; i <= 50; i++) {\r\n  const object = { key: i, text: `${i}`, value: i }\r\n  AMOUNT_OF_QUESTIONS.push(object)\r\n}\r\n\r\nexport default AMOUNT_OF_QUESTIONS","const CATEGORIES = [\r\n    {\r\n        key: '0',\r\n        text: 'Any Category',\r\n        value: '0'\r\n    },\r\n    {\r\n        key: '9',\r\n        text: 'General Knowledge',\r\n        value: '9'\r\n    },\r\n    {\r\n        key: '10',\r\n        text: 'Entertainment: Books',\r\n        value: '10'\r\n    },\r\n    {\r\n        key: '11',\r\n        text: 'Entertainment: Films',\r\n        value: '11'\r\n    },\r\n    {\r\n        key: '12',\r\n        text: 'Entertainment: Music',\r\n        value: '12'\r\n    },\r\n    {\r\n        key: '13',\r\n        text: 'Entertainment: Musicals & Theatres',\r\n        value: '13'\r\n    },\r\n    {\r\n        key: '14',\r\n        text: 'Entertainment: Television',\r\n        value: '14'\r\n    },\r\n    {\r\n        key: '15',\r\n        text: 'Entertainment: Video Games',\r\n        value: '15'\r\n    },\r\n    {\r\n        key: '16',\r\n        text: 'Entertainment: Board Games',\r\n        value: '16'\r\n    },\r\n    {\r\n        key: '17',\r\n        text: 'Science & Nature',\r\n        value: '17'\r\n    },\r\n    {\r\n        key: '18',\r\n        text: 'Science: Computers',\r\n        value: '18'\r\n    },\r\n    {\r\n        key: '19',\r\n        text: 'Science: Mathematics',\r\n        value: '19'\r\n    },\r\n    {\r\n        key: '20',\r\n        text: 'Mythology',\r\n        value: '20'\r\n    },\r\n    {\r\n        key: '21',\r\n        text: 'Sports',\r\n        value: '21'\r\n    },\r\n    {\r\n        key: '22',\r\n        text: 'Geography',\r\n        value: '22'\r\n    },\r\n    {\r\n        key: '23',\r\n        text: 'History',\r\n        value: '23'\r\n    },\r\n    {\r\n        key: '24',\r\n        text: 'Politics',\r\n        value: '24'\r\n    },\r\n    {\r\n        key: '25',\r\n        text: 'Arts',\r\n        value: '25'\r\n    },\r\n    {\r\n        key: '26',\r\n        text: 'Celebrities',\r\n        value: '26'\r\n    },\r\n    {\r\n        key: '27',\r\n        text: 'Animals',\r\n        value: '27'\r\n    },\r\n    {\r\n        key: '28',\r\n        text: 'Vehicles',\r\n        value: '28'\r\n    },\r\n    {\r\n        key: '29',\r\n        text: 'Entertainment: Comics',\r\n        value: '29'\r\n    },\r\n    {\r\n        key: '30',\r\n        text: 'Science: Gadgets',\r\n        value: '30'\r\n    },\r\n    {\r\n        key: '31',\r\n        text: 'Entertainment: Japanese Anime & Manga',\r\n        value: '31'\r\n    },\r\n    {\r\n        key: '32',\r\n        text: 'Entertainment: Cartoon & Animations',\r\n        value: '32'\r\n    }\r\n]\r\n\r\nexport default CATEGORIES","const DIFFICULTY = [\r\n    {\r\n        key: '0',\r\n        text: 'Any Difficulty',\r\n        value: '0'\r\n    },\r\n    {\r\n        key: 'easy',\r\n        text: 'Easy',\r\n        value: 'easy'\r\n    },\r\n    {\r\n        key: 'medium',\r\n        text: 'Medium',\r\n        value: 'medium'\r\n    },\r\n    {\r\n        key: 'hard',\r\n        text: 'Hard',\r\n        value: 'hard'\r\n    }\r\n]\r\n\r\nexport default DIFFICULTY","const QUESTIONS_TYPE = [\r\n    {\r\n        key: '0',\r\n        text: 'Any Type',\r\n        value: '0'\r\n    },\r\n    {\r\n        key: 'multiple',\r\n        text: 'Multiple Choice',\r\n        value: 'multiple'\r\n    },\r\n    {\r\n        key: 'boolean',\r\n        text: 'True / False',\r\n        value: 'boolean'\r\n    }\r\n]\r\n\r\nexport default QUESTIONS_TYPE","import React, { Component } from 'react'\r\n\r\nclass Icon extends Component {\r\n    render = () => {\r\n        return (\r\n            <i style={{ color: this.props.color }} className={this.props.icon}></i>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Icon","import React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nclass Select extends Component {\r\n    render = () => {\r\n        return (\r\n            <Form.Group>\r\n                <Form.Label>{this.props.label}</Form.Label>\r\n                <Form.Control onChange={this.props.onChange} as=\"select\" id=\"categories\">\r\n                    {this.props.itens.map(item => {\r\n                        return (<option key={item.key} value={item.value}>{item.text}</option>)\r\n                    })}\r\n                </Form.Control>\r\n            </Form.Group>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Select","import React, { Component } from 'react'\r\n\r\nimport {\r\n    CATEGORIES,\r\n    AMOUNT_OF_QUESTIONS,\r\n    DIFFICULTY,\r\n    QUESTIONS_TYPE\r\n} from '../../core/constants'\r\n\r\nimport {  Row, Col, Button } from 'react-bootstrap'\r\n\r\nimport Icon from '../Icon'\r\nimport Select from '../Select'\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            category: 0,\r\n            amountOfQuestions: 5,\r\n            difficulty: 0,\r\n            questionsType: 0\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"ml-4 mr-4 mt-4\">\r\n                <Row>\r\n                    <Col className=\"col-12 col-sm-6\">\r\n                        <Select onChange={(event) => {\r\n                            this.setState({ category: event.target.value })\r\n                        }} label=\"Select Quiz Category\" itens={CATEGORIES} />\r\n                    </Col>\r\n                    <Col className=\"col-12 col-sm-6\">\r\n                        <Select onChange={(event) => {\r\n                            this.setState({ amountOfQuestions: event.target.value })\r\n                        }} label=\"Select Amount of Questions\" itens={AMOUNT_OF_QUESTIONS} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"col-12 col-sm-6\">\r\n                        <Select onChange={(event) => {\r\n                            this.setState({ difficulty: event.target.value })\r\n                        }} label=\"Select Difficulty Level\" itens={DIFFICULTY} />\r\n                    </Col>\r\n                    <Col className=\"col-12 col-sm-6\">\r\n                        <Select onChange={(event) => {\r\n                            this.setState({ questionsType: event.target.value })\r\n                        }} label=\"Select Questions Type\" itens={QUESTIONS_TYPE} />\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"w-100 text-center\">\r\n                    <Button onClick={() => this.props.onStart(this.state.amountOfQuestions, this.state.category, this.state.difficulty, this.state.questionsType)} variant=\"primary\"><Icon icon=\"fas fa-play\" /> Start Quiz</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React, { Component } from 'react'\r\nimport { Modal, Spinner } from 'react-bootstrap'\r\n\r\nclass LoadingModal extends Component {\r\n    render = () => {\r\n        return (\r\n            <Modal\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                show={this.props.show}>\r\n                <Modal.Body className=\"text-center\">\r\n                    <h2>Just one second</h2>\r\n                    <p>{this.props.text || 'We are generate the content for you.'}</p>\r\n                    <Spinner\r\n                        as=\"span\"\r\n                        animation=\"grow\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                    />\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoadingModal","function twoHouses(numero) {\r\n    if (numero <= 9) {\r\n        numero = \"0\" + numero\r\n    }\r\n    return numero\r\n}\r\n\r\nfunction secondsToTime(time) {\r\n    time = time / 1000\r\n    let hours = twoHouses(Math.trunc(time / 3600))\r\n    let minutes = twoHouses(Math.trunc((time % 3600) / 60))\r\n    let seconds = twoHouses(Math.trunc((time % 3600) % 60))\r\n    return { hours, minutes, seconds }\r\n}\r\n\r\nexport { secondsToTime }","import React, { Component } from 'react'\r\n\r\nimport { Container, Badge } from 'react-bootstrap'\r\n\r\nimport { secondsToTime } from '../../core/utils'\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const {\r\n            totalQuestions,\r\n            correctAnswers,\r\n            totalTime\r\n        } = this.props\r\n\r\n        const score = Number((correctAnswers * 100) / totalQuestions).toFixed(2)\r\n        const time = secondsToTime(totalTime)\r\n        let timeText = `${time.hours}:${time.minutes}:${time.seconds}`\r\n\r\n        return (\r\n            <Container className=\"text-center mt-4 stats-container\">\r\n                <h2><Badge variant=\"primary\"></Badge>{score >= 60 ? 'YOU PASSED' : 'YOU FAILED'}</h2>\r\n                <p><b>Correct Answers:</b> {correctAnswers} of {totalQuestions}</p>\r\n                <p><b>You percentage:</b> {score}% of 100%</p>\r\n                <p><b>Approval percentage:</b> 60%</p>\r\n                <p><b>Time Spent:</b> {timeText}</p>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React, { Component } from 'react'\r\n\r\nimport { Container, Table } from 'react-bootstrap'\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    render = () => {\r\n        const {\r\n            questionsResult\r\n        } = this.props\r\n\r\n        return (\r\n            <Container className=\"text-center mt-4 questions-container\">\r\n                <Table bordered hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>N.</th>\r\n                            <th>Question</th>\r\n                            <th>Your Answers</th>\r\n                            <th>Correct Answers</th>\r\n                            <th>Point</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            questionsResult.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index + 1}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{item.question}</td>\r\n                                        <td>{item.user_answer}</td>\r\n                                        <td>{item.correct_answer}</td>\r\n                                        <td>{item.correct}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React, { Component } from 'react'\r\n\r\nimport { ButtonGroup, Button } from 'react-bootstrap'\r\n\r\nimport Icon from '../Icon'\r\nimport Stats from './Stats'\r\nimport Questions from './Questions'\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            activeTab: 'Stats'\r\n        }\r\n    }\r\n\r\n\r\n    render = () => {\r\n        const {\r\n            totalQuestions,\r\n            correctAnswers,\r\n            retakeQuiz,\r\n            backToHome,\r\n            questionsResult,\r\n            totalTime\r\n        } = this.props\r\n\r\n        const {\r\n            activeTab\r\n        } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <ButtonGroup className=\"w-100\">\r\n                    <Button onClick={() => {\r\n                        this.setState({ activeTab: 'Stats' })\r\n                    }} className=\"w-50\" variant=\"outline-primary\">Stats</Button>\r\n                    <Button onClick={() => {\r\n                        this.setState({ activeTab: 'Questions' })\r\n                    }} className=\"w-50\" variant=\"outline-primary\">Questions</Button>\r\n                </ButtonGroup>\r\n                {activeTab === 'Stats' &&\r\n                    <Stats\r\n                        totalQuestions={totalQuestions}\r\n                        correctAnswers={correctAnswers}\r\n                        totalTime={totalTime}\r\n                    />}\r\n                {activeTab === 'Questions' &&\r\n                    <Questions\r\n                        questionsResult={questionsResult}\r\n                    />}\r\n                <div className=\"w-100 text-center mt-4\">\r\n                    <Button onClick={retakeQuiz} className=\"mr-2\" variant=\"primary\"><Icon icon=\"fas fa-home\"></Icon> Retake Quiz</Button>\r\n                    <Button onClick={backToHome} className=\"ml-2\" variant=\"primary\"><Icon icon=\"fas fa-undo\"></Icon> Back To Home</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React, { Component } from 'react'\r\n\r\nimport { Badge, Row, Col, Button } from 'react-bootstrap'\r\n\r\nimport he from 'he'\r\nimport Icon from '../Icon'\r\n\r\nimport LoadingModal from '../LoadingModal'\r\nimport Result from '../Result'\r\n\r\nimport { secondsToTime } from '../../core/utils'\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentQuestionIndex: null,\r\n            questions: props.questions,\r\n            selectedOption: null,\r\n            options: null,\r\n            isLoading: true,\r\n            questionsResult: [],\r\n            correctAnswers: 0,\r\n            quizIsCompleted: false,\r\n            resultComponent: null,\r\n            totalTime: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const options = [...this.state.questions[0].incorrect_answers]\r\n        options.splice(Math.floor(Math.random() * 4), 0, this.state.questions[0].correct_answer)\r\n        this.setState({ currentQuestionIndex: 0, options, isLoading: false })\r\n        this.timer = setInterval(() => {\r\n            this.setState({ totalTime: this.state.totalTime + 1000 })\r\n        }, 1000)\r\n    }\r\n\r\n    handleNext = () => {\r\n        const { currentQuestionIndex, questions, selectedOption, questionsResult, correctAnswers } = this.state\r\n        let correct = 0\r\n        if (selectedOption === questions[currentQuestionIndex].correct_answer) {\r\n            correct = 1\r\n        }\r\n\r\n        questionsResult.push({\r\n            question: he.decode(questions[currentQuestionIndex].question),\r\n            user_answer: selectedOption,\r\n            correct_answer: he.decode(questions[currentQuestionIndex].correct_answer),\r\n            correct\r\n        })\r\n\r\n        if (currentQuestionIndex === questions.length - 1) {\r\n            clearInterval(this.timer)\r\n            return this.setState({\r\n                quizIsCompleted: true,\r\n                currentQuestionIndex: 0,\r\n                correctAnswers: correctAnswers + correct,\r\n                options: null,\r\n                questionsResult,\r\n                selectedOption: null,\r\n                isLoading: true\r\n            })\r\n        }\r\n\r\n        const options = [...this.state.questions[currentQuestionIndex + 1].incorrect_answers]\r\n        options.splice(Math.floor(Math.random() * 4), 0, this.state.questions[currentQuestionIndex + 1].correct_answer)\r\n        this.setState({\r\n            currentQuestionIndex: currentQuestionIndex + 1,\r\n            correctAnswers: correctAnswers + correct,\r\n            options,\r\n            questionsResult,\r\n            selectedOption: null\r\n        })\r\n    }\r\n\r\n    retakeQuiz = () => {\r\n        this.setState({\r\n            currentQuestionIndex: null,\r\n            questions: this.state.questions,\r\n            selectedOption: null,\r\n            options: null,\r\n            isLoading: true,\r\n            questionsResult: [],\r\n            correctAnswers: 0,\r\n            quizIsCompleted: false,\r\n            resultComponent: null,\r\n            totalTime: 0\r\n        })\r\n\r\n        const options = [...this.state.questions[0].incorrect_answers]\r\n        options.splice(Math.floor(Math.random() * 4), 0, this.state.questions[0].correct_answer)\r\n        this.setState({ currentQuestionIndex: 0, options, isLoading: false })\r\n    }\r\n\r\n    getResult = () => {\r\n        setTimeout(() => {\r\n            const { questions, totalTime, correctAnswers, questionsResult } = this.state\r\n            const { backToHome } = this.props\r\n\r\n            const resultComponent = (\r\n                <Result\r\n                    totalQuestions={questions.length}\r\n                    correctAnswers={correctAnswers}\r\n                    questionsResult={questionsResult}\r\n                    retakeQuiz={this.retakeQuiz}\r\n                    backToHome={backToHome}\r\n                    totalTime={totalTime}\r\n                />\r\n            )\r\n\r\n            this.setState({ resultComponent, isLoading: false })\r\n        }, 1000)\r\n    }\r\n\r\n    render = () => {\r\n        const { totalTime, isLoading, currentQuestionIndex, questions, selectedOption, options, quizIsCompleted, resultComponent } = this.state\r\n\r\n        if (quizIsCompleted && !resultComponent) {\r\n            this.getResult()\r\n        }\r\n        const time = secondsToTime(totalTime)\r\n        let timeText = `${time.hours}:${time.minutes}:${time.seconds}`\r\n\r\n        return (\r\n            <div>\r\n                <LoadingModal text={quizIsCompleted ? 'Getting your result.' : ''} show={isLoading} />\r\n                {\r\n                    !isLoading && !quizIsCompleted &&\r\n                    <div className=\"ml-4 mr-4 mt-4\">\r\n                        <Row>\r\n                            <Col>\r\n                                <h2><Badge variant=\"primary\">Question N. {currentQuestionIndex + 1} of {questions.length}</Badge></h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h2 className=\"float-sm-left float-md-right\"><Badge variant=\"primary\">{timeText}</Badge></h2>\r\n                            </Col>\r\n                        </Row>\r\n                        <p className=\"questionText\"><b>Question:</b> {he.decode(questions[currentQuestionIndex].question)}</p>\r\n                        <p className=\"chooseText\">Please choose one of the following answers:</p>\r\n                        <div className=\"divider\"></div>\r\n                        <Row>\r\n                            {options.map((item, index) => {\r\n                                const letter = index + 65\r\n                                const selected = selectedOption === item\r\n                                return (\r\n                                    <Col key={index} className=\"col-12 col-sm-6 btn-option\">\r\n                                        <p className={selected ? 'selected' : null} onClick={() => {\r\n                                            this.setState({ selectedOption: item })\r\n                                        }}><Badge variant=\"primary\">{he.decode(`&#${letter}`)}</Badge> {he.decode(item)}</p>\r\n                                    </Col>\r\n                                )\r\n                            })}\r\n                        </Row>\r\n                        <Button onClick={this.handleNext} size=\"lg\" className=\"float-right\" variant=\"primary\" disabled={selectedOption != null ? false : true} ><Icon icon=\"fas fa-forward\" /> Next</Button>\r\n                    </div>\r\n                }\r\n                {quizIsCompleted && resultComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","const API_BASE = 'https://opentdb.com/api.php?amount={0}&category={1}&difficulty={2}&type={3}'\r\n\r\nconst getTrivia = (amountOfQuestions, category, difficulty, type) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        let url = API_BASE.format(amountOfQuestions, category, difficulty, type)\r\n        let response = await fetch(url)\r\n        if (response.ok) {\r\n            let data = await response.json()\r\n            return resolve(data)\r\n        }\r\n        resolve({ \"response_code\": 5 })\r\n    })\r\n}\r\n\r\nif (!String.prototype.format) {\r\n    String.prototype.format = function () {\r\n        let args = arguments\r\n        return this.replace(/{(\\d+)}/g, function (match, number) {\r\n            return typeof args[number] != 'undefined'\r\n                ? args[number]\r\n                : match\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport { getTrivia }","import React, { Component } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nclass ErrorModal extends Component {\r\n    render = () => {\r\n        return (\r\n            <Modal\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                show={this.props.show}>\r\n                <Modal.Body className=\"text-center\">\r\n                    <h2>Error</h2>\r\n                    <p style={{ color: '#d40000' }}>{this.props.text || ''}</p>\r\n                    <Button onClick={this.props.close}>Close</Button>\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorModal","import React, { Component, Fragment } from 'react'\r\n\r\nimport Main from './Main'\r\nimport Quiz from './Quiz'\r\n\r\nimport { Container, Card } from 'react-bootstrap'\r\n\r\nimport Icon from '../components/Icon'\r\n\r\nimport { getTrivia } from '../core/api'\r\nimport LoadingModal from './LoadingModal'\r\nimport ErrorModal from './ErrorModal'\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isQuizStarted: false,\r\n            questions: null,\r\n            isLoading: false,\r\n            isError: false,\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    handleStart = async (amountOfQuestions, category, difficulty, questionsType) => {\r\n        this.setState({ isLoading: true })\r\n        let result = await getTrivia(amountOfQuestions, category, difficulty, questionsType)\r\n        if (result.response_code === 0) {\r\n            let questions = result.results\r\n            return this.setState({ isLoading: false, questions, isQuizStarted: true })\r\n        } else if (result.response_code === 1) {\r\n            return this.setState({ isError: true, isLoading: false, isQuizStarted: false, questions: null, errorMessage: 'The Database doesn\\'t have enough questions for your query. Please change number of questions, difficulty level or type of questions.' })\r\n        } else {\r\n            return this.setState({ isError: true, isLoading: false, isQuizStarted: false, questions: null, errorMessage: 'Could not connect to Database.' })\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ isError: false })\r\n    }\r\n\r\n    backToHome = () => {\r\n        this.setState({ isLoading: true })\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isQuizStarted: false,\r\n                questions: null,\r\n                isLoading: false,\r\n                isError: false,\r\n                errorMessage: ''\r\n            })\r\n        }, 1000)\r\n    }\r\n\r\n    render = () => {\r\n        const { isError, isLoading, isQuizStarted, questions } = this.state\r\n        return (\r\n            <Fragment>\r\n                <Container className=\"main d-flex align-items-center justify-content-center\">\r\n                    <Card className=\"card w-100 quiz-card\">\r\n                        <Card.Header className=\"text-center\">\r\n                            <Card.Title className=\"card-logo\"><Icon icon=\"fas fa-brain\" /></Card.Title>\r\n                            <Card.Title>Open Trivia Questions</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body className=\"result-body\">\r\n                            {!isQuizStarted && <Main onStart={this.handleStart} />}\r\n                            <LoadingModal show={isLoading} />\r\n                            <ErrorModal close={this.handleClose} show={isError} text={this.state.errorMessage} />\r\n                            {isQuizStarted && <Quiz backToHome={this.backToHome} questions={questions} />}\r\n                        </Card.Body>\r\n                        <Card.Footer><a className=\"text-muted\" href=\"https://github.com/ramonrpa\"><Icon icon=\"fab fa-github\" /> Ramon Rodrigues</a></Card.Footer>\r\n                    </Card>\r\n                </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}